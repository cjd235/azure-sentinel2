{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/(Corelight')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "Corelight",
        "category": "Microsoft Sentinel Parser",
        "FunctionAlias": "Corelight",
        "query": "let Corelight_view = view () {\n    Corelight_CL | where isnotempty(Message)\n| extend tmp = parse_json(Message)\n| evaluate bag_unpack(tmp)\n    | extend \n        EventVendor=\"Corelight\",\n        EventProduct=\"Corelight Sensor\",\n        EventType=column_ifexists('_path',''),\n        DvcHostname=column_ifexists('_system_name', ''),\n        SrcDvcHostname=column_ifexists('hostname_s', ''),\n        EventEndTime=column_ifexists('ts', '')\n};\nlet Corelight_main_view = view () {\n    Corelight_view \n    | extend\n        Action=column_ifexists('action', ''),\n        Actions=column_ifexists('actions', ''),\n        AgentRemoteId=column_ifexists('agent_remote_id', ''),\n        AlertCategory=column_ifexists('alert.category', ''),\n        AlertGroupId=column_ifexists('alert.gid', ''),\n        AlertMetadata=column_ifexists('alert.metadata', ''),\n        AlertRevision=column_ifexists('alert.rev', ''),\n        AlertSeverity=column_ifexists('alert.severity', ''),\n        AlertSignature=column_ifexists('alert.signature', ''),\n        AlertSignatureId=column_ifexists('alert.signature_id', ''),\n        Analyzer=column_ifexists('analyzer', ''),\n        AuthAttempts=column_ifexists('auth_attempts', ''),\n        AuthSuccess=column_ifexists('auth_success', ''),\n        BasicConstraintsCa=column_ifexists('basic_constraints.ca', ''),\n        BasicConstraintsPathLen=column_ifexists('basic_constraints.path_len', ''),\n        Cc=column_ifexists('cc', ''),\n        CertificateCn=column_ifexists('certificate.cn', ''),\n        CertificateCurve=column_ifexists('certificate.curve', ''),\n        CertificateExponent=column_ifexists('certificate.exponent', ''),\n        CertificateHashSha1=column_ifexists('orig_certificate_sha1', ''),\n        CertificateIssuer=column_ifexists('certificate.issuer', column_ifexists('client_issuer', '')),\n        CertificateKeyAlg=column_ifexists('certificate.key_alg', ''),\n        CertificateKeyLength=column_ifexists('certificate.key_length', ''),\n        CertificateKeyType=column_ifexists('certificate.key_type', ''),\n        CertificateNotValidAfter=column_ifexists('certificate.not_valid_after', ''),\n        CertificateNotValidBefore=column_ifexists('certificate.not_valid_before', ''),\n        CertificateSerial=column_ifexists('certificate.serial', ''),\n        CertificateSigAlg=column_ifexists('certificate.sig_alg', ''),\n        CertificateSubject=column_ifexists('certificate.subject', column_ifexists('client_subject', '')),\n        CertificateVersion=column_ifexists('certificate.version', ''),\n        CipherAlg=column_ifexists('cipher_alg', ''),\n        Client=column_ifexists('client', ''),\n        ClientMessage=column_ifexists('client_message', ''),\n        ClientSoftware=column_ifexists('client_software', ''),\n        CompileTs=column_ifexists('compile_ts', ''),\n        CompressionAlg=column_ifexists('compression_alg', ''),\n        Cshka=column_ifexists('cshka', ''),\n        DataChannelOrigH=column_ifexists('data_channel.orig_h', ''),\n        DataChannelPassive=column_ifexists('data_channel.passive', ''),\n        DataChannelRespH=column_ifexists('data_channel.resp_h', ''),\n        DataChannelRespP=column_ifexists('data_channel.resp_p', ''),\n        Date=column_ifexists('date', ''),\n        Depth=column_ifexists('depth', ''),\n        DhcpAssignedIpAddr=column_ifexists('assigned_addr', ''),\n        DhcpCircuitId=column_ifexists('circuit_id', ''),\n        DhcpLeaseTime=column_ifexists('lease_time', ''),\n        DhcpRequestedIpAddr=column_ifexists('requested_addr', ''),\n        DhcpSubscriberId=column_ifexists('subscriber_id', ''),\n        Direction=column_ifexists('direction', ''),\n        Dnp3FunctionReply=column_ifexists('fc_reply', ''),\n        Dnp3FunctionRequest=column_ifexists('fc_request', ''),\n        Dnp3Iin=column_ifexists('iin', ''),\n        DnsAdditionalAuthoritativeName=column_ifexists('auth', ''),\n        DnsAdditionalName=column_ifexists('addl', ''),\n        DnsFlagsAuthoritative=column_ifexists('AA', ''),\n        DnsFlagsRecursionAvailable=column_ifexists('RA', ''),\n        DnsFlagsRecursionDesired=column_ifexists('RD', ''),\n        DnsFlagsTruncated=column_ifexists('TC', ''),\n        DnsFlagsZ=column_ifexists('Z', ''),\n        DnsQueryClass=column_ifexists('qclass', ''),\n        DnsQueryClassName=column_ifexists('qclass_name', ''),\n        DnsQueryName=column_ifexists('query', ''),\n        DnsQueryType=column_ifexists('qtype', ''),\n        DnsQueryTypeName=column_ifexists('qtype_name', ''),\n        DnsRejected=column_ifexists('rejected', ''),\n        DnsResponseCode=column_ifexists('rcode', ''),\n        DnsResponseCodeName=column_ifexists('rcode_name', ''),\n        DnsResponseName=column_ifexists('answers', ''),\n        DnsResponseTtl=column_ifexists('TTLs', ''),\n        DnsRtt=column_ifexists('rtt', ''),\n        DnsTransactionId=column_ifexists('trans_id', ''),\n        Domainname=column_ifexists('domainname', ''),\n        Dropped=column_ifexists('dropped', ''),\n        Dst=column_ifexists('dst', ''),\n        DstBytes=column_ifexists('resp_bytes', ''),\n        DstCertificateIssuerName=column_ifexists('issuer', ''),\n        DstCertificateSha1=column_ifexists('resp_certificate_sha1', ''),\n        DstCertificateSubjectName=column_ifexists('subject', ''),\n        DstHostName=column_ifexists('http_header_host', column_ifexists('tls_server_name', '')),\n        DstIpAddr=column_ifexists('id.resp_h', column_ifexists('server_addr', column_ifexists('tx_hosts', ''))),\n        DstIpBytes=column_ifexists('resp_ip_bytes', ''),\n        DstMac=column_ifexists('resp_l2_addr', ''),\n        DstPackets=column_ifexists('resp_pkts', ''),\n        DstPort=column_ifexists('id.resp_p', ''),\n        Duration=column_ifexists('duration', ''),\n        EmailBodySections=column_ifexists('email_body_sections', ''),\n        EventDuration=column_ifexists('duration', ''),\n        EventUid=column_ifexists('z_Enrichment', column_ifexists('zeek_id_uids', column_ifexists('uid', ''))),\n        FailureReason=column_ifexists('failure_reason', ''),\n        FileAccessedTime=column_ifexists('times_accessed', ''),\n        FileChangedTime=column_ifexists('times_changed', ''),\n        FileCreationTime=column_ifexists('times_created', ''),\n        FileDesc=column_ifexists('file_desc', ''),\n        FileDirectory=column_ifexists('cwd', ''),\n        FileMimeType=column_ifexists('file_mime_type', column_ifexists('mime_type', column_ifexists('resp_mime_types', ''))),\n        FileModifiedTime=column_ifexists('times_modified', ''),\n        FileName=column_ifexists('filename', column_ifexists('resp_filenames', '')),\n        FilePath=column_ifexists('file_name', ''),\n        FilePreviousName=column_ifexists('prev_name', ''),\n        FileSize=column_ifexists('file_size', column_ifexists('total_bytes', column_ifexists('size', ''))),\n        FileSystemType=column_ifexists('native_file_system', ''),\n        FingerprintNetworkCommunityId=column_ifexists('community_id', ''),\n        FirstReceived=column_ifexists('first_received', ''),\n        FlowId=column_ifexists('flow_id', ''),\n        From=column_ifexists('from', ''),\n        FtpCommandLine=column_ifexists('arg', ''),\n        FtpPassive=column_ifexists('ftp_passive', ''),\n        FtpProcessName=column_ifexists('command', ''),\n        Fuid=column_ifexists('fuid', ''),\n        Fuids=column_ifexists('fuids', ''),\n        HasCertTable=column_ifexists('has_cert_table', ''),\n        HasDebugData=column_ifexists('has_debug_data', ''),\n        HasExportTable=column_ifexists('has_export_table', ''),\n        HasImportTable=column_ifexists('has_import_table', ''),\n        HashJa3=column_ifexists('ja3', ''),\n        HashJa3s=column_ifexists('ja3s', ''),\n        HashMd5=column_ifexists('md5', ''),\n        HashSha1=column_ifexists('sha1', ''),\n        HashSha256=column_ifexists('sha256', ''),\n        Hassh=column_ifexists('hassh', ''),\n        Hasshalgorithms=column_ifexists('hasshAlgorithms', ''),\n        Hasshserver=column_ifexists('hasshServer', ''),\n        Hasshserveralgorithms=column_ifexists('hasshServerAlgorithms', ''),\n        Hasshversion=column_ifexists('hasshVersion', ''),\n        Helo=column_ifexists('helo', ''),\n        Host=column_ifexists('host', ''),\n        HostKey=column_ifexists('host_key', ''),\n        HostKeyAlg=column_ifexists('host_key_alg', ''),\n        HostP=column_ifexists('host_p', ''),\n        Hostname=column_ifexists('hostname', ''),\n        HttpCookieVariables=column_ifexists('cookie_vars', ''),\n        HttpInformationalCode=column_ifexists('info_code', ''),\n        HttpInformationalMessage=column_ifexists('info_msg', ''),\n        HttpProxiedHeaders=column_ifexists('proxied', ''),\n        HttpReferrerOriginal=column_ifexists('referrer', ''),\n        HttpRequestBodyBytes=column_ifexists('request_body_len', ''),\n        HttpRequestHeaderHost=column_ifexists('host', ''),\n        HttpRequestHeaderNames=column_ifexists('client_header_names', ''),\n        HttpRequestHeaderOrigin=column_ifexists('origin', ''),\n        HttpRequestMethod=column_ifexists('method', ''),\n        HttpResponseBodyBytes=column_ifexists('response_body_len', ''),\n        HttpResponseBodyOriginal=column_ifexists('post_body', ''),\n        HttpResponseHeaderNames=column_ifexists('server_header_names', ''),\n        HttpStatusCode=column_ifexists('status_code', ''),\n        HttpStatusMessage=column_ifexists('status_msg', ''),\n        HttpVersion=column_ifexists('version', ''),\n        Id=column_ifexists('id', ''),\n        InReplyTo=column_ifexists('in_reply_to', ''),\n        Is64bit=column_ifexists('is_64bit', ''),\n        IsExe=column_ifexists('is_exe', ''),\n        IsOrig=column_ifexists('is_orig', ''),\n        IsWebmail=column_ifexists('is_webmail', ''),\n        KexAlg=column_ifexists('kex_alg', ''),\n        LastReply=column_ifexists('last_reply', ''),\n        LocalOrig=column_ifexists('local_orig', ''),\n        Logcert=column_ifexists('logcert', ''),\n        MacAlg=column_ifexists('mac_alg', ''),\n        Machine=column_ifexists('machine', ''),\n        Mailfrom=column_ifexists('mailfrom', ''),\n        Matched=column_ifexists('matched', ''),\n        MimeType=column_ifexists('mime_type', ''),\n        Msg=column_ifexists('msg', ''),\n        MsgId=column_ifexists('msg_id', ''),\n        MsgOrig=column_ifexists('msg_orig', ''),\n        MsgTypes=column_ifexists('msg_types', ''),\n        N=column_ifexists('n', ''),\n        Name=column_ifexists('name', ''),\n        NetworkApplication=column_ifexists('service', ''),\n        NetworkConnectionHistory=column_ifexists('history', ''),\n        NetworkConnectionState=column_ifexists('conn_state', ''),\n        NetworkInnerVlanId=column_ifexists('inner_vlan', ''),\n        NetworkMissedBytes=column_ifexists('missed_bytes', ''),\n        NetworkOuterVlanId=column_ifexists('vlan', ''),\n        NetworkProtocol=case(EventType == \"smb_files\" or EventType == \"smb_mapping\" or EventType == \"ssl\" or EventType == \"ssl_red\" or EventType == \"http\" or EventType == \"http_red\", \"tcp\",EventType == \"dhcp\", \"udp\",column_ifexists('proto','')),\n        Node=column_ifexists('node', ''),\n        Note=column_ifexists('note', ''),\n        Notice=column_ifexists('notice', ''),\n        Os=column_ifexists('os', ''),\n        OscpValidationStatus=column_ifexists('ocsp_status', ''),\n        P=column_ifexists('p', ''),\n        PacketSegment=column_ifexists('packet_segment', ''),\n        Path=column_ifexists('path', ''),\n        PcapCount=column_ifexists('pcap_cnt', ''),\n        Peer=column_ifexists('peer', ''),\n        PeerDescr=column_ifexists('peer_descr', ''),\n        Rcptto=column_ifexists('rcptto', ''),\n        RemoteLocationCity=column_ifexists('remote_location.city', ''),\n        RemoteLocationCountryCode=column_ifexists('remote_location.country_code', ''),\n        RemoteLocationLatitude=column_ifexists('remote_location.latitude', ''),\n        RemoteLocationLongitude=column_ifexists('remote_location.longitude', ''),\n        RemoteLocationRegion=column_ifexists('remote_location.region', ''),\n        ReplyCode=column_ifexists('reply_code', ''),\n        ReplyMsg=column_ifexists('reply_msg', ''),\n        ReplyTo=column_ifexists('reply_to', ''),\n        SanDns=column_ifexists('san.dns', ''),\n        SanEmail=column_ifexists('san.email', ''),\n        SanIp=column_ifexists('san.ip', ''),\n        SanUri=column_ifexists('san.uri', '') ,\n        SecondReceived=column_ifexists('second_received', ''),\n        SectionNames=column_ifexists('section_names', ''),\n        SeenIndicator=column_ifexists('seen.indicator', ''),\n        SeenIndicatorType=column_ifexists('seen.indicator_type', ''),\n        SeenWhere=column_ifexists('seen.where', ''),\n        Server=column_ifexists('server', ''),\n        ServerDnsComputerName=column_ifexists('server_dns_computer_name', ''),\n        ServerMessage=column_ifexists('server_message', ''),\n        ServerNbComputerName=column_ifexists('server_nb_computer_name', ''),\n        ServerSoftware=column_ifexists('server_software', ''),\n        ServerTreeName=column_ifexists('server_tree_name', ''),\n        Service=column_ifexists('service', ''),\n        ShareName=column_ifexists('path', ''),\n        ShareRelativeTargetName=column_ifexists('name', ''),\n        ShareType=column_ifexists('share_type', ''),\n        SmbAction=column_ifexists('action', ''),\n        SoftwareFlashVersionOriginal=column_ifexists('flash_version', ''),\n        SoftwareType=column_ifexists('software_type', ''),\n        Source=column_ifexists('source', ''),\n        Sources=column_ifexists('sources', ''),\n        Src=column_ifexists('src', ''),\n        SrcBytes=column_ifexists('orig_bytes', ''),\n        SrcDomain=column_ifexists('domain', ''),\n        SrcFileName=column_ifexists('orig_filenames', ''),\n        SrcFilePath=column_ifexists('src_file_name', ''),\n        SrcFqdn=column_ifexists('client_fqdn', ''),\n        SrcHostName=column_ifexists('host_name', ''),\n        SrcIpAddr=column_ifexists('id.orig_h', column_ifexists('rx_hosts', column_ifexists('client_addr', ''))),\n        SrcIpBytes=column_ifexists('orig_ip_bytes', ''),\n        SrcMac=column_ifexists('mac', column_ifexists('orig_l2_addr', '')),\n        SrcMimeType=column_ifexists('orig_mime_types', ''),\n        SrcPackets=column_ifexists('orig_pkts', ''),\n        SrcPort=column_ifexists('id.orig_p', ''),\n        Sub=column_ifexists('sub', ''),\n        Subject=column_ifexists('subject', ''),\n        SubpressFor=column_ifexists('subpress_for', ''),\n        Subsystem=column_ifexists('subsystem', ''),\n        Success=column_ifexists('success', ''),\n        SuricataId=column_ifexists('suri_id', ''),\n        SuricataIds=column_ifexists('suri_ids', ''),\n        Tls=column_ifexists('tls', ''),\n        TlsCertificateValidationStatus=column_ifexists('validation_status', ''),\n        TlsCipher=column_ifexists('cipher', ''),\n        TlsCurve=column_ifexists('curve', ''),\n        TlsEstablished=column_ifexists('established', ''),\n        TlsLastAlert=column_ifexists('last_alert', ''),\n        TlsNextProtocol=column_ifexists('next_protocol', ''),\n        TlsNotaryResponse=column_ifexists('notary', ''),\n        TlsResumed=column_ifexists('resumed', ''),\n        TlsServerName=column_ifexists('server_name', ''),\n        TlsVersion=column_ifexists('version', ''),\n        TlsVersionNumber=column_ifexists('version_num', ''),\n        To=column_ifexists('to', ''),\n        TransactionId=column_ifexists('tx_id', ''),\n        TransDepth=column_ifexists('trans_depth', ''),\n        TunnelType=column_ifexists('tunnel_type', ''),\n        UnparsedVersion=column_ifexists('unparsed_version', ''),\n        Url=column_ifexists('url', ''),\n        UrlOriginal=column_ifexists('uri', ''),\n        UrlQueryValues=column_ifexists('uri_vars', ''),\n        UserAgent=column_ifexists('user_agent', ''),\n        UserAgentOriginal=column_ifexists('user_agent', ''),\n        UserName=column_ifexists('user', column_ifexists('username', '')),\n        UserPassword=column_ifexists('password', ''),\n        Username=column_ifexists('username', ''),\n        UsesAslr=column_ifexists('uses_aslr', ''),\n        UsesCodeIntegrity=column_ifexists('uses_code_integrity', ''),\n        UsesDep=column_ifexists('uses_dep', ''),\n        UsesSeh=column_ifexists('uses_seh', ''),\n        ValidCtLogs=column_ifexists('valid_ct_logs', ''),\n        ValidCtOperators=column_ifexists('valid_ct_operators', ''),\n        ValidCtOperatorsList=column_ifexists('valid_ct_operators_list', ''),\n        Version=column_ifexists('version', ''),\n        VersionAddl=column_ifexists('version.addl', ''),\n        VersionMajor=column_ifexists('version.major', ''),\n        VersionMinor2=column_ifexists('version.minor2', ''),\n        VersionMinor3=column_ifexists('version.minor3', ''),\n        VersionMinor=column_ifexists('version.minor', ''),\n        X509=column_ifexists('x509', ''),\n        XOriginatingIp=column_ifexists('x_originating_ip', ''),\n        ZeekConnLocalDst=column_ifexists('local_resp', ''),\n        ZeekConnLocalSrc=column_ifexists('local_orig', ''),\n        ZeekFilesAnalyzers=column_ifexists('analyzers', ''),\n        ZeekFilesEntropy=column_ifexists('entropy', ''),\n        ZeekFilesExtracted=column_ifexists('extracted', ''),\n        ZeekFilesExtractedCutoff=column_ifexists('extracted_cutoff', ''),\n        ZeekFilesExtractedSize=column_ifexists('extracted_size', ''),\n        ZeekFilesMissingBytes=column_ifexists('missing_bytes', ''),\n        ZeekFilesOverflowBytes=column_ifexists('overflow_bytes', ''),\n        ZeekFilesSeenBytes=column_ifexists('seen_bytes', ''),\n        ZeekFilesTimedout=column_ifexists('timedout', ''),\n        ZeekHttpOmniture=column_ifexists('omniture', ''),\n        ZeekHttpTags=column_ifexists('tags', ''),\n        ZeekHttpTransDepth=column_ifexists('trans_depth', ''),\n        ZeekIdCertChainFuids=column_ifexists('cert_chain_fuids', ''),\n        ZeekIdClientCertChainFuids=column_ifexists('client_cert_chain_fuids', ''),\n        ZeekIdConnUids=column_ifexists('conn_uids', ''),\n        ZeekIdFuid=column_ifexists('fuid', ''),\n        ZeekIdOrigFuids=column_ifexists('orig_fuids', ''),\n        ZeekIdParentFuid=column_ifexists('parent_fuid', ''),\n        ZeekIdRespFuids=column_ifexists('resp_fuids', ''),\n        ZeekIdTunnelParents=column_ifexists('tunnel_parents', ''),\n        ZeekIdUids=column_ifexists('uids', ''),\n        ZeekMetaDstIpAddrHostName=column_ifexists('id.resp_h_name.vals', ''),\n        ZeekMetaDstIpAddrSource=column_ifexists('id.resp_h_name.src', ''),\n        ZeekMetaSrcIpAddrHostName=column_ifexists('id.orig_h_name.vals', ''),\n        ZeekMetaSrcIpAddrSource=column_ifexists('id.orig_h_name.src', ''),\n        ZeekOrigCc=column_ifexists('orig_cc', ''),\n        ZeekRespCc=column_ifexists('resp_cc', '')\n       | project\n        DvcHostname,\n        SrcDvcHostname,\n        EventEndTime,\n        Message,\n        TimeGenerated, \n        EventType,\n        EventVendor,\n        EventProduct,\n        Action,\n        Actions,\n        AgentRemoteId,\n        AlertCategory,\n        AlertGroupId,\n        AlertMetadata,\n        AlertRevision,\n        AlertSeverity,\n        AlertSignature,\n        AlertSignatureId,\n        Analyzer,\n        AuthAttempts,\n        AuthSuccess,\n        BasicConstraintsCa,\n        BasicConstraintsPathLen,\n        Cc,\n        CertificateCn,\n        CertificateCurve,\n        CertificateExponent,\n        CertificateHashSha1,\n        CertificateIssuer,\n        CertificateKeyAlg,\n        CertificateKeyLength,\n        CertificateKeyType,\n        CertificateNotValidAfter,\n        CertificateNotValidBefore,\n        CertificateSerial,\n        CertificateSigAlg,\n        CertificateSubject,\n        CertificateVersion,\n        CipherAlg,\n        Client,\n        ClientMessage,\n        ClientSoftware,\n        CompileTs,\n        CompressionAlg,\n        Cshka,\n        DataChannelOrigH,\n        DataChannelPassive,\n        DataChannelRespH,\n        DataChannelRespP,\n        Date,\n        Depth,\n        DhcpAssignedIpAddr,\n        DhcpCircuitId,\n        DhcpLeaseTime,\n        DhcpRequestedIpAddr,\n        DhcpSubscriberId,\n        Direction,\n        Dnp3FunctionReply,\n        Dnp3FunctionRequest,\n        Dnp3Iin,\n        DnsAdditionalAuthoritativeName,\n        DnsAdditionalName,\n        DnsFlagsAuthoritative,\n        DnsFlagsRecursionAvailable,\n        DnsFlagsRecursionDesired,\n        DnsFlagsTruncated,\n        DnsFlagsZ,\n        DnsQueryClass,\n        DnsQueryClassName,\n        DnsQueryName,\n        DnsQueryType,\n        DnsQueryTypeName,\n        DnsRejected,\n        DnsResponseCode,\n        DnsResponseCodeName,\n        DnsResponseName,\n        DnsResponseTtl,\n        DnsRtt,\n        DnsTransactionId,\n        Domainname,\n        Dropped,\n        Dst,\n        DstBytes,\n        DstCertificateIssuerName,\n        DstCertificateSha1,\n        DstCertificateSubjectName,\n        DstHostName,\n        DstIpAddr,\n        DstIpBytes,\n        DstMac,\n        DstPackets,\n        DstPort,\n        Duration,\n        EmailBodySections,\n        EventDuration,\n        EventUid,\n        FailureReason,\n        FileAccessedTime,\n        FileChangedTime,\n        FileCreationTime,\n        FileDesc,\n        FileDirectory,\n        FileMimeType,\n        FileModifiedTime,\n        FileName,\n        FilePath,\n        FilePreviousName,\n        FileSize,\n        FileSystemType,\n        FingerprintNetworkCommunityId,\n        FirstReceived,\n        FlowId,\n        From,\n        FtpCommandLine,\n        FtpPassive,\n        FtpProcessName,\n        Fuid,\n        Fuids,\n        HasCertTable,\n        HasDebugData,\n        HasExportTable,\n        HasImportTable,\n        HashJa3,\n        HashJa3s,\n        HashMd5,\n        HashSha1,\n        HashSha256,\n        Hassh,\n        Hasshalgorithms,\n        Hasshserver,\n        Hasshserveralgorithms,\n        Hasshversion,\n        Helo,\n        Host,\n        HostKey,\n        HostKeyAlg,\n        HostP,\n        Hostname,\n        HttpCookieVariables,\n        HttpInformationalCode,\n        HttpInformationalMessage,\n        HttpProxiedHeaders,\n        HttpReferrerOriginal,\n        HttpRequestBodyBytes,\n        HttpRequestHeaderHost,\n        HttpRequestHeaderNames,\n        HttpRequestHeaderOrigin,\n        HttpRequestMethod,\n        HttpResponseBodyBytes,\n        HttpResponseBodyOriginal,\n        HttpResponseHeaderNames,\n        HttpStatusCode,\n        HttpStatusMessage,\n        HttpVersion,\n        Id,\n        InReplyTo,\n        Is64bit,\n        IsExe,\n        IsOrig,\n        IsWebmail,\n        KexAlg,\n        LastReply,\n        LocalOrig,\n        Logcert,\n        MacAlg,\n        Machine,\n        Mailfrom,\n        Matched,\n        MimeType,\n        Msg,\n        MsgId,\n        MsgOrig,\n        MsgTypes,\n        N,\n        Name,\n        NetworkApplication,\n        NetworkConnectionHistory,\n        NetworkConnectionState,\n        NetworkInnerVlanId,\n        NetworkMissedBytes,\n        NetworkOuterVlanId,\n        NetworkProtocol,\n        Node,\n        Note,\n        Notice,\n        Os,\n        OscpValidationStatus,\n        P,\n        PacketSegment,\n        Path,\n        PcapCount,\n        Peer,\n        PeerDescr,\n        Rcptto,\n        RemoteLocationCity,\n        RemoteLocationCountryCode,\n        RemoteLocationLatitude,\n        RemoteLocationLongitude,\n        RemoteLocationRegion,\n        ReplyCode,\n        ReplyMsg,\n        ReplyTo,\n        SanDns,\n        SanEmail,\n        SanIp,\n        SanUri,\n        SecondReceived,\n        SectionNames,\n        SeenIndicator,\n        SeenIndicatorType,\n        SeenWhere,\n        Server,\n        ServerDnsComputerName,\n        ServerMessage,\n        ServerNbComputerName,\n        ServerSoftware,\n        ServerTreeName,\n        Service,\n        ShareName,\n        ShareRelativeTargetName,\n        ShareType,\n        SmbAction,\n        SoftwareFlashVersionOriginal,\n        SoftwareType,\n        Source,\n        Sources,\n        Src,\n        SrcBytes,\n        SrcDomain,\n        SrcFileName,\n        SrcFilePath,\n        SrcFqdn,\n        SrcHostName,\n        SrcIpAddr,\n        SrcIpBytes,\n        SrcMac,\n        SrcMimeType,\n        SrcPackets,\n        SrcPort,\n        Sub,\n        Subject,\n        SubpressFor,\n        Subsystem,\n        Success,\n        SuricataId,\n        SuricataIds,\n        Tls,\n        TlsCertificateValidationStatus,\n        TlsCipher,\n        TlsCurve,\n        TlsEstablished,\n        TlsLastAlert,\n        TlsNextProtocol,\n        TlsNotaryResponse,\n        TlsResumed,\n        TlsServerName,\n        TlsVersion,\n        TlsVersionNumber,\n        To,\n        TransactionId,\n        TransDepth,\n        TunnelType,\n        UnparsedVersion,\n        Url,\n        UrlOriginal,\n        UrlQueryValues,\n        UserAgent,\n        UserAgentOriginal,\n        UserName,\n        UserPassword,\n        Username,\n        UsesAslr,\n        UsesCodeIntegrity,\n        UsesDep,\n        UsesSeh,\n        ValidCtLogs,\n        ValidCtOperators,\n        ValidCtOperatorsList,\n        Version,\n        VersionAddl,\n        VersionMajor,\n        VersionMinor2,\n        VersionMinor3,\n        VersionMinor,\n        X509,\n        XOriginatingIp,\n        ZeekConnLocalDst,\n        ZeekConnLocalSrc,\n        ZeekFilesAnalyzers,\n        ZeekFilesEntropy,\n        ZeekFilesExtracted,\n        ZeekFilesExtractedCutoff,\n        ZeekFilesExtractedSize,\n        ZeekFilesMissingBytes,\n        ZeekFilesOverflowBytes,\n        ZeekFilesSeenBytes,\n        ZeekFilesTimedout,\n        ZeekHttpOmniture,\n        ZeekHttpTags,\n        ZeekHttpTransDepth,\n        ZeekIdCertChainFuids,\n        ZeekIdClientCertChainFuids,\n        ZeekIdConnUids,\n        ZeekIdFuid,\n        ZeekIdOrigFuids,\n        ZeekIdParentFuid,\n        ZeekIdRespFuids,\n        ZeekIdTunnelParents,\n        ZeekIdUids,\n        ZeekMetaDstIpAddrHostName,\n        ZeekMetaDstIpAddrSource,\n        ZeekMetaSrcIpAddrHostName,\n        ZeekMetaSrcIpAddrSource,\n        ZeekOrigCc,\n        ZeekRespCc\n};\nCorelight_main_view\n",
        "version": 1,
        "tags": []
      }
    }
  ]
}
