{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/(CiscoSDWANNetflow')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "CiscoSDWANNetflow",
        "category": "Microsoft Sentinel Parser",
        "FunctionAlias": "CiscoSDWANNetflow",
        "query": "let ConvertNetflowApplicationTag = (ApplicationTag: string) {\n    let raw_application_tag = todynamic(ApplicationTag);\n    let application_tag_number_0 = toint((raw_application_tag)[0]);\n    let application_tag_number_1 = toint((raw_application_tag)[1]);\n    let application_tag_number_2 = toint((raw_application_tag)[2]);\n    let application_tag_number_3 = toint((raw_application_tag)[3]);\n    let hex_application_tag = strcat(tohex(application_tag_number_1, 2), tohex(application_tag_number_2, 2), tohex(application_tag_number_3, 2));\n    case(application_tag_number_0 == 0, strcat(\"Invalid\", \" : \", hex_application_tag),\n        application_tag_number_0 == 1, strcat(\"IANA-L3\", \" : \", hex_application_tag),\n        application_tag_number_0 == 2, strcat(\"PANA-L3\", \" : \", hex_application_tag),\n        application_tag_number_0 == 3, strcat(\"IANA-L4\", \" : \", hex_application_tag),\n        application_tag_number_0 == 4, strcat(\"PANA-L4\", \" : \", hex_application_tag),\n        application_tag_number_0 == 5, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 6, strcat(\"USER-Defined\", \" : \", hex_application_tag),\n        application_tag_number_0 == 7, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 8, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 9, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 10, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 11, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 12, strcat(\"PANA-L2\", \" : \", hex_application_tag),\n        application_tag_number_0 == 13, strcat(\"PANA-L7\", \" : \", hex_application_tag),\n        application_tag_number_0 == 14, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 15, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 16, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 17, strcat(\"Reserved\", \" : \", hex_application_tag),\n        application_tag_number_0 == 18, strcat(\"ETHERTYPE\", \" : \", hex_application_tag),\n        application_tag_number_0 == 19, strcat(\"LLC\", \" : \", hex_application_tag),\n        application_tag_number_0 == 20, strcat(\"PANA-L7-PEN\", \" : \", hex_application_tag), \"unclassified\");\n};\nlet CiscoSDWANNetflow_view = view() {\n    CiscoSDWANNetflow_CL\n    | extend\n        EventVendor=\"CiscoSD-WAN\",\n        EventProduct=\"Netflow\",\n        ApplicationTag = coalesce(column_ifexists('netflow_application_tag_s', ''), column_ifexists('netflow_options_application_tag_s', ''), column_ifexists('netflow_scope_application_tag_s', '')),\n        NetflowBytesIn = column_ifexists('netflow_bytes_in_d', ''),\n        NetflowElement_9_2239 = coalesce(toint(column_ifexists('netflow_element_9_2239_d', '')), toint(column_ifexists('netflow_scope_element_9_2239_d', ''))),\n        NetflowEgressVRFID = column_ifexists('netflow_egress_vrf_id_d', '' ),\n        NetflowIngressVRFID = column_ifexists('netflow_ingress_vrf_id_d', ''),\n        NetflowExporterAddress = column_ifexists('netflow_exporter_address_s', ''),\n        NetflowExporterSourceID = column_ifexists('netflow_exporter_source_id_d', ''),\n        NetflowExporterTimestamp = column_ifexists('netflow_exporter_timestamp_t', ''),\n        NetflowExporterUptimeMillis = column_ifexists('netflow_exporter_uptime_millis_d', ''),\n        NetflowExporterVersion = column_ifexists('netflow_exporter_version_d', ''),\n        NetflowFirewallEvent = column_ifexists('netflow_firewall_event_d', ''),\n        NetflowFlowFieldDestDSAID = column_ifexists('netflow_flow_field_dst_dsa_id_d', ''),\n        NetflowFlowFieldSGT = column_ifexists('netflow_flow_field_sgt_d', ''),\n        NetflowFlowFieldSrcDSAID = column_ifexists('netflow_flow_field_src_dsa_id_d', ''),\n        NetflowFlowEndMilliseconds = column_ifexists('netflow_flow_end_milliseconds_t', ''),\n        NetflowFlowEndReason = column_ifexists('netflow_flow_end_reason_d', ''),\n        NetflowFlowStartMilliseconds = column_ifexists('netflow_flow_start_milliseconds_t', ''),\n        NetflowFwAction = coalesce(toint(column_ifexists('netflow_fw_action_d', '')), toint(column_ifexists('netflow_scope_fw_action_d', ''))),\n        NetflowFwDestAddrIpv4 = column_ifexists('netflow_fw_dest_addr_ipv4_s', ''),\n        NetflowFwDestPort = column_ifexists('netflow_fw_dest_port_d', ''),\n        NetflowFwEventTimeMsec = column_ifexists('netflow_fw_event_time_msec_d', ''),\n        NetflowFwICMPCode = column_ifexists('netflow_fw_icmp_code_d', ''),\n        NetflowFwICMPType = column_ifexists('netflow_fw_icmp_type_d', ''),\n        NetflowFwInitiatorOctets = column_ifexists('netflow_fw_initiator_octets_d', ''),\n        NetflowFwIpv4Ident = column_ifexists('netflow_fw_ipv4_ident_d', ''),\n        NetflowFwPolicy = coalesce(toint(column_ifexists('netflow_fw_policy_d', '')), toint(column_ifexists('netflow_options_fw_policy_d', '')), toint(column_ifexists('netflow_scope_fw_policy_d', ''))),\n        NetflowFwProtocol = column_ifexists('netflow_fw_protocol_d', ''),\n        NetflowFwResponderOctets = column_ifexists('netflow_fw_responder_octets_d', ''),\n        NetflowFwSrcAddrIpv4 = column_ifexists('netflow_fw_src_addr_ipv4_s', ''),\n        NetflowFwSrcPort = column_ifexists('netflow_fw_src_port_d', ''),\n        NetflowFwSummaryPktCnt = column_ifexists('netflow_fw_summary_pkt_cnt_d', ''),\n        NetflowFwTCPAck = column_ifexists('netflow_fw_tcp_ack_d', ''),\n        NetflowFwTCPFlags = column_ifexists('netflow_fw_tcp_flags_d', ''),\n        NetflowFwTCPSeq = column_ifexists('netflow_fw_tcp_seq_d', ''),\n        NetflowFwXlateDestAddrIpv4 = column_ifexists('netflow_fw_xlate_dst_addr_ipv4_s', ''),\n        NetflowFwXlateDestPort = column_ifexists('netflow_fw_xlate_dst_port_d', ''),\n        NetflowFwXlateSrcAddrIpv4 = column_ifexists('netflow_fw_xlate_src_addr_ipv4_s', ''),\n        NetflowFwXlateSrcPort = column_ifexists('netflow_fw_xlate_src_port_d', ''),\n        NetflowInputSNMPIDX = column_ifexists('netflow_input_snmpidx_d', ''),\n        NetflowOutputSNMPIDX = column_ifexists('netflow_output_snmpidx_d', ''),\n        NetflowIpDiffServCodePoint = column_ifexists('netflow_ip_diff_serv_code_point_d', ''),\n        NetflowApplicationDescription = column_ifexists('netflow_options_application_description_s', ''),\n        NetflowApplicationName = column_ifexists('netflow_options_application_name_s', ''),\n        NetflowEncryptedTechnology = column_ifexists('netflow_options_encrypted_technology_s', ''),\n        NetflowFwActionRule = column_ifexists('netflow_options_fw_action_rule_s', ''),\n        NetflowFwExtEvent = coalesce(toint(column_ifexists('netflow_fw_ext_event_d', '')), toint(column_ifexists('netflow_options_fw_ext_event_d', ''))),\n        NetflowFwExtEventDesc = column_ifexists('netflow_options_fw_ext_event_desc_s', ''),\n        NetflowFwPolicyRule = column_ifexists('netflow_options_fw_policy_rule_s', ''),\n        NetflowFwPolicyType = column_ifexists('netflow_options_fw_policy_type_s', ''),\n        NetflowFwZonepairID = coalesce(toint(column_ifexists('netflow_fw_zonepair_id_d', '')),toint(column_ifexists('netflow_options_fw_zonepair_id_d', ''))),\n        NetflowFwZonepairName = column_ifexists('netflow_options_fw_zonepair_name_s', ''),\n        NetflowInterfaceDescription = column_ifexists('netflow_options_interface_description_s', ''),\n        NetflowInterfaceName = column_ifexists('netflow_options_interface_name_s', ''),\n        NetflowP2pTechnology = column_ifexists('netflow_options_p2p_technology_s', ''),\n        NetflowTunnelTechnology = column_ifexists('netflow_options_tunnel_technology_s', ''),\n        NetflowPacketsIn = column_ifexists('netflow_packets_in_d', ''),\n        NetflowPostIpDiffServCodePoint = column_ifexists('netflow_post_ip_diff_serv_code_point_d', ''),\n        NetflowSrcTOS = column_ifexists('netflow_src_tos_d', ''),\n        NetflowType = column_ifexists('netflow_type_s', ''),\n        NetflowUsername = column_ifexists('netflow_username_s', ''),\n        NetworkCommunityID = column_ifexists('network_community_id_s', ''),\n        NetworkDirection = column_ifexists('network_direction_s', ''),\n        ObserverIp = column_ifexists('observer_ip_s', ''),\n        HostArchitecture = column_ifexists('host_architecture_s', ''),\n        HostContainerized = column_ifexists('host_containerized_b', ''),\n        NetflowHostname = coalesce(column_ifexists('host_hostname_s', ''), column_ifexists('host_name_s', '')),\n        HostID = column_ifexists('host_id_g', ''),\n        HostIp = column_ifexists('host_ip_s', ''),\n        HostMac = column_ifexists('host_mac_s', ''),\n        Hostname = column_ifexists('host_name_s', ''),\n        HostOSCodename = column_ifexists('host_os_codename_s', ''),\n        HostOSFamily = column_ifexists('host_os_family_s', ''),\n        HostOSKernel = column_ifexists('host_os_kernel_s', ''),\n        HostOSName = column_ifexists('host_os_name_s', ''),\n        HostOSPlatform = column_ifexists('host_os_platform_s', ''),\n        HostOSType = column_ifexists('host_os_type_s', ''),\n        HostOSVersion = column_ifexists('host_os_version_s', ''),\n        InputType = column_ifexists('input_type_s', ''),\n        Tags = column_ifexists('tags_s', ''),\n        TimeStamp = column_ifexists('_timestamp_t', ''),\n        Version = column_ifexists('_version_s', ''),\n        AgentEphemeralID = column_ifexists('agent_ephemeral_id_g', ''),\n        AgentID = column_ifexists('agent_id_g', ''),\n        AgentName = column_ifexists('agent_name_s', ''),\n        AgentType = column_ifexists('agent_type_s', ''),\n        AgentVersion = column_ifexists('agent_version_s', ''),\n        ECSVersion = column_ifexists('ecs_version_s', ''),\n        EventAction = column_ifexists('event_action_s', ''),\n        EventCategory = column_ifexists('event_category_s', ''),\n        EventCreated = column_ifexists('event_created_t', ''),\n        EventKind = column_ifexists('event_kind_s', ''),\n        EventType = column_ifexists('event_type_s', ''),\n        FlowID = column_ifexists('flow_id_s', ''),\n        FlowLocality = column_ifexists('flow_locality_s', '')\n    | extend NetflowApplicationTag = iff(isnotempty(ApplicationTag),ConvertNetflowApplicationTag(ApplicationTag), ApplicationTag)\n    | project\n        EventVendor,\n        EventProduct,\n        TimeStamp,\n        TimeGenerated = TimeStamp,\n        NetflowApplicationTag,\n        NetflowApplicationName,\n        NetflowApplicationDescription,\n        NetflowBytesIn,\n        NetflowElement_9_2239,\n        NetflowEgressVRFID,\n        NetflowIngressVRFID,\n        NetflowExporterAddress,\n        NetflowExporterSourceID,\n        NetflowExporterTimestamp,\n        NetflowExporterUptimeMillis,\n        NetflowExporterVersion,\n        NetflowFirewallEvent,\n        NetflowFlowFieldDestDSAID,\n        NetflowFlowFieldSGT,\n        NetflowFlowFieldSrcDSAID,\n        NetflowFlowEndMilliseconds,\n        NetflowFlowEndReason,\n        NetflowFlowStartMilliseconds,\n        NetflowFwAction,\n        NetflowFwDestAddrIpv4,\n        NetflowFwDestPort,\n        NetflowFwEventTimeMsec,\n        NetflowFwICMPCode,\n        NetflowFwICMPType,\n        NetflowFwInitiatorOctets,\n        NetflowFwResponderOctets,\n        NetflowFwIpv4Ident,\n        NetflowFwPolicy,\n        NetflowFwProtocol,\n        NetflowFwSrcAddrIpv4,\n        NetflowFwSrcPort,\n        NetflowFwSummaryPktCnt,\n        NetflowFwTCPAck,\n        NetflowFwTCPFlags,\n        NetflowFwTCPSeq,\n        NetflowFwXlateDestAddrIpv4,\n        NetflowFwXlateDestPort,\n        NetflowFwXlateSrcAddrIpv4,\n        NetflowFwXlateSrcPort,\n        NetflowInputSNMPIDX,\n        NetflowOutputSNMPIDX,\n        NetflowIpDiffServCodePoint,\n        NetflowEncryptedTechnology,\n        NetflowFwActionRule,\n        NetflowFwExtEvent,\n        NetflowFwExtEventDesc,\n        NetflowFwPolicyRule,\n        NetflowFwPolicyType,\n        NetflowFwZonepairID,\n        NetflowFwZonepairName,\n        NetflowInterfaceDescription,\n        NetflowInterfaceName,\n        NetflowP2pTechnology,\n        NetflowTunnelTechnology,\n        NetflowPacketsIn,\n        NetflowPostIpDiffServCodePoint,\n        NetflowSrcTOS,\n        NetflowType,\n        NetflowUsername,\n        NetworkCommunityID,\n        NetworkDirection,\n        ObserverIp,\n        HostArchitecture,\n        HostContainerized,\n        NetflowHostname,\n        HostID,\n        HostIp,\n        HostMac,\n        Hostname,\n        HostOSCodename,\n        HostOSFamily,\n        HostOSKernel,\n        HostOSName,\n        HostOSPlatform,\n        HostOSType,\n        HostOSVersion,\n        InputType,\n        Tags,\n        Version,\n        AgentEphemeralID,\n        AgentID,\n        AgentName,\n        AgentType,\n        AgentVersion,\n        Computer,\n        ECSVersion,\n        EventAction,\n        EventCategory,\n        EventCreated,\n        EventKind,\n        EventType,\n        FlowID,\n        FlowLocality,\n        RawData,\n        Type,\n        _ResourceId,\n        _SubscriptionId\n};\nCiscoSDWANNetflow_view\n",
        "version": 1,
        "tags": []
      }
    }
  ]
}
