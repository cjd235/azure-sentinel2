{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/(CiscoUCS')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "CiscoUCS",
        "category": "Microsoft Sentinel Parser",
        "FunctionAlias": "CiscoUCS",
        "query": "let LogHeader = Syslog\n| where Computer in (\"UCSserver1\", \"UCSserver2\") // UCSserver1 and UCSserver2 are examples, replace this list with your Cisco UCS devices\n| extend Parser = extract_all(@\"^(\\d+\\s+[\\w]+\\s+\\d+\\s[0-9\\:]+)\\s\\w+\\:\\s([\\w%]+)\\-(\\d+)\\-([\\w\\_]+)\\:\\s([\\S\\s]+)?\", dynamic([1,2,3,4,5]), SyslogMessage)\n| mv-expand Parser\n| extend EventTime = tostring(Parser[0]),\n         Facility = tostring(Parser[1]),\n         SeverityNumber = tostring(Parser[2]),\n         Mneumonic = tostring(Parser[3]),\n         Substring = tostring(Parser[4])\n| project-away Parser;\n// Parse and normalize AUDIT logs\nlet AuditLog = LogHeader\n| where Mneumonic == \"AUDIT\"\n| extend Parser = extract_all(@\"^\\[([\\w\\d\\.\\_\\-]+)?\\]\\[([\\w\\d\\.\\_\\-\\\\]+)?\\]\\[(\\w+)?\\]\\[([\\w+\\_\\-\\.]+)?\\]\\[?(\\w+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?([\\S\\s]+)?\", dynamic([1,2,3,4,5,6,7,8,9]), Substring)\n| mv-expand Parser \n| extend SrcUserName = tostring(Parser[0]),\n         DstUserName = tostring(Parser[1]),\n         Action = tostring(Parser[2]),\n         System = tostring(Parser[5]),\n         Description = tostring(Parser[8])\n| project-away Substring, Parser;\nlet EventLog = LogHeader\n// Parse and normalize EVENT logs\n| where Mneumonic == \"EVENT\"\n| extend Parser = extract_all(@\"^\\[(\\w+)?\\]\\[(\\w+)?\\]\\[(\\w+)?\\]\\[([\\w\\-\\\\\\_]+)?\\]\\[(\\w+)?\\]\\s+\\[([\\w\\:\\-\\_]+)\\]\\:\\s?([\\S\\s]+)?\", dynamic([1,2,3,4,5,6,7]), Substring)\n| mv-expand Parser\n| extend EventId = tostring(Parser[0]),\n         Action = tostring(Parser[2]),\n         UserName = tostring(Parser[3]),\n         Status = tostring(Parser[5]),\n         Description = tostring(Parser[6])\n| project-away Substring, Parser;\n// Parse and normalize FAULT logs\nlet FaultLog = LogHeader\n| where Mneumonic !in (\"AUDIT\", \"EVENT\")\n| extend Parser = extract_all(@\"^\\[(\\w+)?\\]\\[(\\w+)?\\]\\[([\\w\\-\\_]+)?\\]\\[([\\w\\-\\_\\/]+)?\\]\\s+([\\s\\S]+)?\", dynamic([1,2,3,4,5]), Substring)\n| mv-expand Parser \n| extend EventId = tostring(Parser[0]),\n         EventSeverity = tostring(Parser[1]),\n         FaultType = tostring(Parser[2]),\n         System = tostring(Parser[3]),\n         Description = tostring(Parser[4])\n| project-away Substring, Parser;\nunion AuditLog, EventLog, FaultLog\n",
        "version": 1,
        "tags": []
      }
    }
  ]
}
