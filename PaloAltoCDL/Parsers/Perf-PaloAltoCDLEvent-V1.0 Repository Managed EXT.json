{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/(PaloAltoCDLEvent')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "PaloAltoCDLEvent",
        "category": "Microsoft Sentinel Parser",
        "FunctionAlias": "PaloAltoCDLEvent",
        "query": "CommonSecurityLog\n| where DeviceVendor =~ 'Palo Alto Networks'\n| where DeviceProduct =~ 'LF'\n| extend EventVendor = 'Palo Alto Networks'\n| extend EventProduct = 'Cortex Data Lake'\n| extend EventSchemaVersion = 0.2\n| extend EventCount = 1\n| extend DeviceCustomNumber1 = coalesce(column_ifexists(\"FieldDeviceCustomNumber1\", long(null)),DeviceCustomNumber1),\n         DeviceCustomNumber2 = coalesce(column_ifexists(\"FieldDeviceCustomNumber2\", long(null)),DeviceCustomNumber2),\n         DeviceCustomNumber3 = coalesce(column_ifexists(\"FieldDeviceCustomNumber3\", long(null)),DeviceCustomNumber3)\n| extend packed = pack(DeviceCustomNumber1Label, DeviceCustomNumber1\n                     , DeviceCustomNumber2Label, DeviceCustomNumber2\n                     , DeviceCustomNumber3Label, DeviceCustomNumber3\n                     , DeviceCustomString1Label, DeviceCustomString1\n                     , DeviceCustomString2Label, DeviceCustomString2\n                     , DeviceCustomString3Label, DeviceCustomString3\n                     , DeviceCustomString4Label, DeviceCustomString4\n                     , DeviceCustomString5Label, DeviceCustomString5\n                     , DeviceCustomString6Label, DeviceCustomString6\n                     , DeviceCustomDate1Label, DeviceCustomDate1\n                     , DeviceCustomDate2Label, DeviceCustomDate2\n                     , FlexString1Label, FlexString1\n                     , FlexString2Label, FlexString2\n                     , DeviceCustomFloatingPoint1Label, DeviceCustomFloatingPoint1\n                     , DeviceCustomFloatingPoint2Label, DeviceCustomFloatingPoint2\n                     , DeviceCustomIPv6Address1Label, DeviceCustomIPv6Address1\n                     , DeviceCustomIPv6Address2Label, DeviceCustomIPv6Address2\n                     , DeviceCustomIPv6Address3Label, DeviceCustomIPv6Address3)\n| evaluate bag_unpack(packed)\n| mv-apply AdditionalFields = extract_all(@'(?P<key>[a-zA-Z0-9-_]+)=(?P<value>[a-zA-Z0-9-_:@.,?%#(){}><\\/\"\\\\ ]+)', dynamic([\"key\",\"value\"]), AdditionalExtensions) on (\n    project packed1 = pack(tostring(AdditionalFields[0]), tostring(AdditionalFields[1]))\n    | summarize bag = make_bag(packed1)\n)\n| evaluate bag_unpack(bag)\n| extend DvcIpAddr = column_ifexists( \"Device IPv6 Address\" , \"\")\n         , DstIpAddr = column_ifexists( \"Destination IPv6 Address\" , \"\")\n         , SrcIpAddr = column_ifexists( \"Source IPv6 Address\" , \"\")\n         , EventResultDetails = coalesce(column_ifexists(\"reason\",\"\"),column_ifexists(\"Reason\",\"\"))\n         , SrcZone = column_ifexists( \"FromZone\" , \"\")\n         , DstZone = column_ifexists( \"Zone\" , \"\")\n         , NetworkPackets = column_ifexists( \"PacketsTotal\" , int(null))\n         , NetworkDuration = column_ifexists( \"SessionDuration\" , int(null))\n         , NetworkSessionId = column_ifexists( \"SessionID\" , int(null))\n         , EventStartTime = coalesce(column_ifexists(\"StartTime\",datetime(null))\n         , todatetime(column_ifexists(\"start\",\"\")))\n         , EventEndTime = coalesce(column_ifexists(\"EventEndTime\",datetime(null))\n         , todatetime(column_ifexists(\"end\",\"\")))\n         , EventType = coalesce(column_ifexists(\"DeviceEventCategory\",\"\"), column_ifexists(\"cat\",\"\"))\n| project-rename EventProductVersion = DeviceVersion\n                , DvcId = DeviceExternalID\n                , DvcHostname = DeviceName\n                , DstNatPortNumber = DestinationTranslatedPort\n                , DstHostname = DestinationHostName\n                , SrcNatPortNumber = SourceTranslatedPort\n                , SrcFileName = FileName\n                , SrcFilePath = FilePath\n                , EventMessage = Message\n                , EventSeverity = LogSeverity\n                , EventResult = Activity\n                , DstPortNumber = DestinationPort\n                , DstUserId = DestinationUserID\n                , EventResourceId = DeviceEventClassID\n                , HttpRequestMethod = RequestMethod\n                , Url = RequestURL\n                , HttpContentFormat = RequestContext\n                , SrcHostname = SourceHostName\n                , DvcAction = DeviceAction\n                , DstDomain = DestinationNTDomain\n                , SrcPortNumber = SourcePort\n                , DvcInboundInterface = DeviceInboundInterface\n                , DvcOutboundInterface = DeviceOutboundInterface\n                , NetworkProtocol = Protocol\n                , NetworkApplicationProtocol = ApplicationProtocol\n                , SrcDomain = SourceNTDomain\n                , SrcUserId = SourceUserID\n                , DstBytes = ReceivedBytes\n                , SrcBytes = SentBytes\n| extend EventTimeIngested = todatetime(ReceiptTime)\n| extend SrcNatIpAddr = case(isempty(SourceIP), SourceTranslatedAddress, \n                            pack_array(SourceTranslatedAddress,SourceIP))\n| extend DstNatIpAddr = case(isempty(DestinationIP), DestinationTranslatedAddress,\n                            pack_array(DestinationTranslatedAddress, DestinationIP))\n| extend suser0 = column_ifexists(\"suser0\",\"\")\n       , duser0 = column_ifexists(\"duser0\",\"\")\n | extend SrcUsername = case(isempty(suser0), SourceUserName, \n                             pack_array(SourceUserName,suser0))\n | extend DstUsername = case(isempty(duser0), DestinationUserName,\n                             pack_array(DestinationUserName,duser0))\n| project-away ReceiptTime\n              , Type\n              , StartTime\n              , EndTime\n              , DeviceVendor\n              , DeviceProduct\n              , duser0\n              , DestinationUserName\n              , suser0\n              , SourceUserName\n              , AdditionalExtensions\n              , DestinationTranslatedAddress\n              , DestinationIP\n              , SourceTranslatedAddress\n              , SourceIP\n              , DeviceCustomNumber1Label\n              , DeviceCustomNumber1\n              , DeviceCustomNumber2Label\n              , DeviceCustomNumber2\n              , DeviceCustomNumber3Label\n              , DeviceCustomNumber3\n              , DeviceCustomString1Label\n              , DeviceCustomString1\n              , DeviceCustomString2Label\n              , DeviceCustomString2\n              , DeviceCustomString3Label\n              , DeviceCustomString3\n              , DeviceCustomString4Label\n              , DeviceCustomString4\n              , DeviceCustomString5Label\n              , DeviceCustomString5\n              , DeviceCustomString6Label\n              , DeviceCustomString6\n              , DeviceCustomDate1Label\n              , DeviceCustomDate1\n              , DeviceCustomDate2Label\n              , DeviceCustomDate2\n              , FlexString1Label\n              , FlexString1\n              , FlexString2Label\n              , FlexString2\n              , DeviceCustomIPv6Address1Label\n              , DeviceCustomIPv6Address1\n              , DeviceCustomIPv6Address2Label\n              , DeviceCustomIPv6Address2\n              , DeviceCustomIPv6Address3Label\n              , DeviceCustomIPv6Address3\n              , DeviceCustomFloatingPoint1Label\n              , DeviceCustomFloatingPoint1\n              , DeviceCustomFloatingPoint2Label\n              , DeviceCustomFloatingPoint2\n",
        "version": 1,
        "tags": []
      }
    }
  ]
}
