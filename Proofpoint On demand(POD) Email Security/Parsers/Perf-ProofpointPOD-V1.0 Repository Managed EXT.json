{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/(ProofpointPOD')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "ProofpointPOD",
        "category": "Microsoft Sentinel Parser",
        "FunctionAlias": "ProofpointPOD",
        "query": "let ProofpointPOD_maillog_view = view () { \n    union isfuzzy=true ProofpointPOD_maillog_CL, maillog_CL | where isnotempty( pps_cid_s) and event_type_s == \"maillog\"\n    | extend \n                SmMsgid=column_ifexists('sm_msgid_g', ''),\n                PpsCid=column_ifexists('pps_cid_s', ''),\n                PpsAgent=column_ifexists('pps_agent_s', ''),\n                Id=column_ifexists('id_s', ''),\n                SmNrcpts=column_ifexists('sm_nrcpts_s', ''),\n                SmAuth=column_ifexists('sm_auth_s', ''),\n                SmClass=column_ifexists('sm_class_s', ''),\n                SmQid=column_ifexists('sm_qid_s', ''),\n                MetadataOriginDataAgent=column_ifexists('metadata_origin_data_agent_s', ''),\n                MetadataOriginDataCid=column_ifexists('metadata_origin_data_cid_s', ''),\n                SmMailer=column_ifexists('sm_mailer_s', ''),\n                SmDsn=column_ifexists('sm_dsn_s', ''),\n                SmPri=column_ifexists('sm_pri_s', ''),\n                SmXdelay=column_ifexists('sm_xdelay_s', ''),\n                SmCtladdr=column_ifexists('sm_ctladdr_s', ''),\n                EventUid=column_ifexists('sm_msgid_s', ''),\n                NetworkBytes=toreal( column_ifexists('sm_sizeBytes_s', '')),\n                TlsEstablished=column_ifexists('sm_tls_verify_s', ''),\n                SrcNatIpAddr=column_ifexists('sm_relay_s', ''),\n                ProcessName=column_ifexists('sm_daemon_s', ''),\n                NetworkProtocol=column_ifexists('sm_proto_s', ''),\n                SrcUserUpn=column_ifexists('sm_from_s', ''),\n                EventOriginalTime=column_ifexists('ts_t', ''),\n                EventOriginalMessage=column_ifexists('data_s', ''),\n                EventType=column_ifexists('event_type_s', ''),\n                NetworkConnectionStateDetailed=column_ifexists('sm_stat_s', ''),\n                DstUserUpn=column_ifexists('sm_to_s', ''),\n                NetworkDuration=column_ifexists('sm_delay_s', ''),\n                EventVendor=\"Proofpoint\",\n                EventProduct=\"Proofpoint On Demand Email Security\"\n    | project\n                TimeGenerated, \n                EventVendor,\n                EventProduct,\n                SmMsgid,\n                PpsCid,\n                PpsAgent,\n                Id,\n                SmNrcpts,\n                SmAuth,\n                SmClass,\n                SmQid,\n                MetadataOriginDataAgent,\n                MetadataOriginDataCid,\n                SmMailer,\n                SmDsn,\n                SmPri,\n                SmXdelay,\n                SmCtladdr,\n                EventUid,\n                NetworkBytes,\n                TlsEstablished,\n                SrcNatIpAddr,\n                ProcessName,\n                NetworkProtocol,\n                SrcUserUpn,\n                EventOriginalTime,\n                EventOriginalMessage,\n                EventType,\n                NetworkConnectionStateDetailed,\n                DstUserUpn,\n                NetworkDuration\n};\nlet ProofpointPOD_message_view = view () { \n    union isfuzzy=true ProofpointPOD_message_CL, message_CL | where event_type_s == \"message\"\n    | extend \n                FilterModulesUrldefenseCountsNoRewriteIsLargeMsgPartSize=column_ifexists('filter_modules_urldefense_counts_noRewriteIsLargeMsgPartSize_d', ''),\n\t\t        PpsVersion=column_ifexists('pps_version_s', ''),\n\t\t        PpsCid=column_ifexists('pps_cid_s', ''),\n\t\t        MsgParts=column_ifexists('msgParts_s', ''),\n\t\t        MetadataOriginDataAgent=column_ifexists('metadata_origin_data_agent_s', ''),\n\t\t        MetadataOriginDataVersion=column_ifexists('metadata_origin_data_version_s', ''),\n\t\t        MetadataOriginDataCid=column_ifexists('metadata_origin_data_cid_s', ''),\n\t\t        ConnectionHelo=column_ifexists('connection_helo_s', ''),\n\t\t        MsgLang=column_ifexists('msg_lang_s', ''),\n\t\t        MsgNormalizedHeaderSubject=column_ifexists('msg_normalizedHeader_subject_s', ''),\n\t\t        MsgNormalizedHeaderMessageId=column_ifexists('msg_normalizedHeader_message_id_s', ''),\n\t\t        MsgNormalizedHeaderTo=column_ifexists('msg_normalizedHeader_to_s', ''),\n\t\t        MsgNormalizedHeadertoHashed=column_ifexists('msg_normalizedHeader_toHashed_s', ''),\n\t\t        MsgNormalizedHeaderFrom=column_ifexists('msg_normalizedHeader_from_s', ''),\n\t\t        MsgNormalizedHeaderFromHashed=column_ifexists('msg_normalizedHeader_fromHashed_s', ''),\n\t\t        MsgHeaderFrom=column_ifexists('msg_header_from_s', ''),\n\t\t        MsgHeaderFromHashed=column_ifexists('msg_header_fromHashed_s', ''),\n\t\t        MsgHeaderMessageId=column_ifexists('msg_header_message_id_s', ''),\n\t\t        MsgHeaderSubject=column_ifexists('msg_header_subject_s', ''),\n\t\t        MsgHeaderTo=column_ifexists('msg_header_to_s', ''),\n\t\t        MsgHeaderToHashed=column_ifexists('msg_header_toHashed_s', ''),\n\t\t        MsgParsedAddressesFromHashed=column_ifexists('msg_parsedAddresses_fromHashed_s', ''),\n\t\t        MsgParsedAddressesFrom=column_ifexists('msg_parsedAddresses_from_s', ''),\n\t\t        MsgParsedAddressesToHashed=column_ifexists('msg_parsedAddresses_toHashed_s', ''),\n\t\t        MsgParsedAddressesTo=column_ifexists('msg_parsedAddresses_to_s', ''),\n\t\t        FilterActions=column_ifexists('filter_actions_s', ''),\n\t\t        FilterRoutes=column_ifexists('filter_routes_s', ''),\n\t\t        FilterQid=column_ifexists('filter_qid_s', ''),\n\t\t        FilterIsMsgEncrypted=column_ifexists('filter_isMsgEncrypted_b', ''),\n\t\t        FilterIsMsgReinjected=column_ifexists('filter_isMsgReinjected_b', ''),\n\t\t        FilterQuarantineRule=column_ifexists('filter_quarantine_rule_s', ''),\n\t\t        FilterQuarantineFolder=column_ifexists('filter_quarantine_folder_s', ''),\n\t\t        FilterModulesDmarcSrvid=column_ifexists('filter_modules_dmarc_srvid_s', ''),\n\t\t        FilterModulesDmarcRecords=column_ifexists('filter_modules_dmarc_records_s', ''),\n\t\t        FilterModulesDmarcFilterdResult=column_ifexists('filter_modules_dmarc_filterdResult_s', ''),\n\t\t        FilterModulesDmarcAuthResults=column_ifexists('filter_modules_dmarc_authResults_s', ''),\n\t\t        FilterModulesSpfDomain=column_ifexists('filter_modules_spf_domain_s', ''),\n\t\t        FilterModulesSpfResult=column_ifexists('filter_modules_spf_result_s', ''),\n\t\t        FilterModulesSpamTriggeredClassifier=column_ifexists('filter_modules_spam_triggeredClassifier_s', ''),\n\t\t        FilterModulesSpamSafeBlockedListMatches=column_ifexists('filter_modules_spam_safeBlockedListMatches_s', ''),\n\t\t        FilterModulesSpamVersionEngine=column_ifexists('filter_modules_spam_version_engine_s', ''),\n\t\t        FilterModulesSpamVersionDefinitions=column_ifexists('filter_modules_spam_version_definitions_s', ''),\n\t\t        FilterModulesSpamScoresOverall=column_ifexists('filter_modules_spam_scores_overall_d', ''),\n\t\t        FilterModulesSpamScoresEngine=column_ifexists('filter_modules_spam_scores_engine_d', ''),\n\t\t        FilterModulesSpamScoresClassifiers=column_ifexists('filter_modules_spam_scores_classifiers_s', ''),\n\t\t        FilterModulesSpamLangs=column_ifexists('filter_modules_spam_langs_s', ''),\n\t\t        FilterModulesUrldefenseVersionEngine=column_ifexists('filter_modules_urldefense_version_engine_s', ''),\n\t\t        FilterModulesUrldefenseCountsUnique=column_ifexists('filter_modules_urldefense_counts_unique_d', ''),\n\t\t        FilterModulesUrldefenseCountsRewritten=column_ifexists('filter_modules_urldefense_counts_rewritten_d', ''),\n\t\t        FilterModulesUrldefenseCountsTotal=column_ifexists('filter_modules_urldefense_counts_total_d', ''),\n\t\t        FilterModulesDkimv=column_ifexists('filter_modules_dkimv_s', ''),\n\t\t        FilterModulesPdrV2Response=column_ifexists('filter_modules_pdr_v2_response_s', ''),\n\t\t        FilterModulesZerohourScore=column_ifexists('filter_modules_zerohour_score_s', ''),\n\t\t        FilterDisposition=column_ifexists('filter_disposition_s', ''),\n\t\t        FilterSuborgsRcpts=column_ifexists('filter_suborgs_rcpts_s', ''),\n\t        \tFilterSuborgsSender=column_ifexists('filter_suborgs_sender_s', ''),\n\t        \tFilterMsgSizeBytes=column_ifexists('filter_msgSizeBytes_d', ''),\n\t\t        FilterVerifiedRcptsHashed=column_ifexists('filter_verified_rcptsHashed_s', ''),\n\t\t        FilterVerifiedRcpts=column_ifexists('filter_verified_rcpts_s', ''),\n\t        \tGuid=column_ifexists('guid_s', ''),\n\t        \tEnvelopeRcptsHashed=column_ifexists('envelope_rcptsHashed_s', ''),\n\t        \tEnvelopeFromHashed=column_ifexists('envelope_fromHashed_s', ''),\n\t        \tMsgNormalizedHeaderReturnPathHashed=column_ifexists('msg_normalizedHeader_return_pathHashed_s', ''),\n\t        \tMsgNormalizedHeaderXMailer=column_ifexists('msg_normalizedHeader_x_mailer_s', ''),\n\t\t        MsgNormalizedHeaderReturnPath=column_ifexists('msg_normalizedHeader_return_path_s', ''),\n\t\t        MsgHeaderXMailer=column_ifexists('msg_header_x_mailer_s', ''),\n\t\t        MsgHeaderReturnPathHashed=column_ifexists('msg_header_return_pathHashed_s', ''),\n\t\t        MsgHeaderReturnPath=column_ifexists('msg_header_return_path_s', ''),\n\t\t        FilterModulesSpamCharsets=column_ifexists('filter_modules_spam_charsets_s', ''),\n\t\t        FilterModulesDmarcAlignment=column_ifexists('filter_modules_dmarc_alignment_s', ''),\n\t\t        MsgNormalizedHeaderXOriginatingIp=column_ifexists('msg_normalizedHeader_x_originating_ip_s', ''),\n\t\t        MsgHeaderXOriginatingIp=column_ifexists('msg_header_x_originating_ip_s', ''),\n\t\t        MsgNormalizedHeaderReplyTo=column_ifexists('msg_normalizedHeader_reply_to_s', ''),\n\t\t        MsgNormalizedHeaderReplyToHashed=column_ifexists('msg_normalizedHeader_reply_toHashed_s', ''),\n\t\t        MsgHeaderReplyToHashed=column_ifexists('msg_header_reply_toHashed_s', ''),\n\t\t        MsgHeaderReplyTo=column_ifexists('msg_header_reply_to_s', ''),\n\t\t        FilterModulesUrldefenseCountsNoRewriteIsEmail=column_ifexists('filter_modules_urldefense_counts_noRewriteIsEmail_d', ''),\n\t\t        FilterModulesPdrV2Rscore=column_ifexists('filter_modules_pdr_v2_rscore_d', ''),\n\t\t        FilterOrigGuid=column_ifexists('filter_origGuid_s', ''),\n\t\t        MsgNormalizedHeaderCc=column_ifexists('msg_normalizedHeader_cc_s', ''),\n\t\t        MsgNormalizedHeaderCcHashed=column_ifexists('msg_normalizedHeader_ccHashed_s', ''),\n\t\t        MsgParsedAddressesCcHashed=column_ifexists('msg_parsedAddresses_ccHashed_s', ''),\n\t\t        MsgParsedAddressesCc=column_ifexists('msg_parsedAddresses_cc_s', ''),\n\t\t        MsgHeaderCcHashed=column_ifexists('msg_header_ccHashed_s', ''),\n\t\t        MsgHeaderCc=column_ifexists('msg_header_cc_s', ''),\n\t\t        FilterModulesAvVirusNames=column_ifexists('filter_modules_av_virusNames_s', ''),\n\t\t        FilterThrottleIp=column_ifexists('filter_throttleIp_s', ''),\n\t\t        FilterModulesUrldefenseCountsNoRewriteIsUnsupportedScheme=column_ifexists('filter_modules_urldefense_counts_noRewriteIsUnsupportedScheme_d', ''),\n\t\t        FilterModulesUrldefenseCountsNoRewriteIsSchemeless=column_ifexists('filter_modules_urldefense_counts_noRewriteIsSchemeless_d', ''),\n\t\t        FilterModulesUrldefenseCountsNoRewriteIsMaxLengthExceeded=column_ifexists('filter_modules_urldefense_counts_noRewriteIsMaxLengthExceeded_d', ''),\n\t\t        FilterModulesUrldefenseCountsNoRewriteIsExcludedDomain=column_ifexists('filter_modules_urldefense_counts_noRewriteIsExcludedDomain_d', ''),\n                PpsAgent=column_ifexists('pps_agent_s', ''),\n                EventOriginalTime=column_ifexists('ts_t', ''),\n                TlsCipher=column_ifexists('connection_tls_inbound_cipher_s', ''),\n                TlsCipherBits=column_ifexists('connection_tls_inbound_cipherBits_d', ''),\n                TlsVersion=column_ifexists('connection_tls_inbound_version_s', ''),\n                SrcIpAddr=column_ifexists('connection_ip_s', ''),\n                NetworkSessionId=column_ifexists('connection_sid_s', ''),\n                SrcDvcHostname=column_ifexists('connection_host_s', ''),\n                SrcGeoCountry=column_ifexists('connection_country_s', ''),\n                NetworkProtocol=column_ifexists('connection_protocol_s', ''),\n                NetworkConnectionState=column_ifexists('connection_resolveStatus_s', ''),\n                NetworkBytes=toreal( column_ifexists('sm_sizeBytes_s', '')),\n                NetworkDuration=column_ifexists('filter_durationSecs_d', ''),\n                EventStartTime=column_ifexists('filter_startTime_t', ''),\n                NetworkDirection=column_ifexists('filter_routeDirection_s', ''),\n                DstUserUpn=column_ifexists('envelope_rcpts_s', ''),\n                SrcUserUpn=column_ifexists('envelope_from_s', ''),\n                EventType=column_ifexists('event_type_s', ''),\n                EventVendor=\"Proofpoint\",\n                EventProduct=\"Proofpoint On Demand Email Security\"\n    | project\n                TimeGenerated, \n                EventVendor,\n                EventProduct,\n                FilterModulesUrldefenseCountsNoRewriteIsLargeMsgPartSize,\n                PpsVersion,\n                PpsCid,\n                MsgParts,\n                MetadataOriginDataAgent,\n                MetadataOriginDataVersion,\n                MetadataOriginDataCid,\n                ConnectionHelo,\n                MsgLang,\n                MsgNormalizedHeaderSubject,\n                MsgNormalizedHeaderMessageId,\n                MsgNormalizedHeaderTo,\n                MsgNormalizedHeadertoHashed,\n                MsgNormalizedHeaderFrom,\n                MsgNormalizedHeaderFromHashed,\n                MsgHeaderFrom,\n                MsgHeaderFromHashed,\n                MsgHeaderMessageId,\n                MsgHeaderSubject,\n                MsgHeaderTo,\n                MsgHeaderToHashed,\n                MsgParsedAddressesFromHashed,\n                MsgParsedAddressesFrom,\n                MsgParsedAddressesToHashed,\n                MsgParsedAddressesTo,\n                FilterActions,\n                FilterRoutes,\n                FilterQid,\n                FilterIsMsgEncrypted,\n                FilterIsMsgReinjected,\n                FilterQuarantineRule,\n                FilterQuarantineFolder,\n                FilterModulesDmarcSrvid,\n                FilterModulesDmarcRecords,\n                FilterModulesDmarcFilterdResult,\n                FilterModulesDmarcAuthResults,\n                FilterModulesSpfDomain,\n                FilterModulesSpfResult,\n                FilterModulesSpamTriggeredClassifier,\n                FilterModulesSpamSafeBlockedListMatches,\n                FilterModulesSpamVersionEngine,\n                FilterModulesSpamVersionDefinitions,\n                FilterModulesSpamScoresOverall,\n                FilterModulesSpamScoresEngine,\n                FilterModulesSpamScoresClassifiers,\n                FilterModulesSpamLangs,\n                FilterModulesUrldefenseVersionEngine,\n                FilterModulesUrldefenseCountsUnique,\n                FilterModulesUrldefenseCountsRewritten,\n                FilterModulesUrldefenseCountsTotal,\n                FilterModulesDkimv,\n                FilterModulesPdrV2Response,\n                FilterModulesZerohourScore,\n                FilterDisposition,\n                FilterSuborgsRcpts,\n                FilterSuborgsSender,\n                FilterMsgSizeBytes,\n                FilterVerifiedRcptsHashed,\n                FilterVerifiedRcpts,\n                Guid,\n                EnvelopeRcptsHashed,\n                EnvelopeFromHashed,\n                MsgNormalizedHeaderReturnPathHashed,\n                MsgNormalizedHeaderXMailer,\n                MsgNormalizedHeaderReturnPath,\n                MsgHeaderXMailer,\n                MsgHeaderReturnPathHashed,\n                MsgHeaderReturnPath,\n                FilterModulesSpamCharsets,\n                FilterModulesDmarcAlignment,\n                MsgNormalizedHeaderXOriginatingIp,\n                MsgHeaderXOriginatingIp,\n                MsgNormalizedHeaderReplyTo,\n                MsgNormalizedHeaderReplyToHashed,\n                MsgHeaderReplyToHashed,\n                MsgHeaderReplyTo,\n                FilterModulesUrldefenseCountsNoRewriteIsEmail,\n                FilterModulesPdrV2Rscore,\n                FilterOrigGuid,\n                MsgNormalizedHeaderCc,\n                MsgNormalizedHeaderCcHashed,\n                MsgParsedAddressesCcHashed,\n                MsgParsedAddressesCc,\n                MsgHeaderCcHashed,\n                MsgHeaderCc,\n                FilterModulesAvVirusNames,\n                FilterThrottleIp,\n                FilterModulesUrldefenseCountsNoRewriteIsUnsupportedScheme,\n                FilterModulesUrldefenseCountsNoRewriteIsSchemeless,\n                FilterModulesUrldefenseCountsNoRewriteIsMaxLengthExceeded,\n                FilterModulesUrldefenseCountsNoRewriteIsExcludedDomain,\n                PpsAgent,\n                SrcDvcHostname,\n                EventOriginalTime,\n                TlsCipher,\n                TlsCipherBits,\n                TlsVersion,\n                SrcIpAddr,\n                NetworkSessionId,\n                SrcGeoCountry,\n                NetworkProtocol,\n                NetworkConnectionState,\n                NetworkBytes,\n                NetworkDuration,\n                EventStartTime,\n                NetworkDirection,\n                DstUserUpn,\n                SrcUserUpn,\n                EventType\n\t| join kind=inner  (\n\t\tProofpointPOD_message_CL\n\t\t| extend Guid = column_ifexists('guid_s', ''),\n\t\t    MsgParts=column_ifexists('msgParts_s', '')\n\t\t| extend d = parse_json(MsgParts)\n\t\t| mv-apply d on (where isnotempty(d.urls)\n\t\t    | extend URL_LIST = tostring(d.urls))\n\t\t| extend e = parse_json(URL_LIST)\n\t\t| mv-apply e on (where isnotempty(e.url)\n\t\t    | extend URLLIST = tostring(e.url))\n\t\t| summarize make_set(URLLIST) by Guid\n        )\n        on Guid\n    | project-away Guid1\n    | project-rename Urls = set_URLLIST\n};\nunion isfuzzy=true ProofpointPOD_message_view, ProofpointPOD_maillog_view\n",
        "version": 1,
        "tags": []
      }
    }
  ]
}
